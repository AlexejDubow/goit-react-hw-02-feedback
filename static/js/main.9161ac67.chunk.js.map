{"version":3,"sources":["components/Notification/index.jsx","components/Statistics/index.jsx","components/FeedbackOptions/index.jsx","components/Section/index.jsx","components/Feedback/index.jsx","helpers/index.js","components/App.jsx","index.jsx"],"names":["Notification","message","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","onLeaveFeedback","name","type","onClick","Section","title","children","Feedback","state","handleClick","e","targetName","target","setState","prevState","this","countTotal","toFixed","countPositivePercentage","Component","App","ReactDOM","render","document","getElementById"],"mappings":"qQAWeA,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,2BAAIA,ICuBSC,G,MArBI,SAAC,GAAD,IACjBC,EADiB,EACjBA,KAAMC,EADW,EACXA,QAASC,EADE,EACFA,IAAKC,EADH,EACGA,MAAOC,EADV,EACUA,mBADV,OAGjB,oCACE,2CACED,GAAS,kBAAC,EAAD,CAAcL,QAAQ,wBAC9BK,GACH,oCACE,4BACE,qCAAYH,GACZ,wCAAeC,GACf,oCAAWC,GACX,sCAAaC,GACb,kDAAyBC,EAAzB,WCDOC,G,MAdS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACtB,oCACE,4BAAQC,KAAK,OAAOC,KAAK,SAASC,QAASH,GAA3C,QAGA,4BAAQC,KAAK,UAAUC,KAAK,SAASC,QAASH,GAA9C,WAGA,4BAAQC,KAAK,MAAMC,KAAK,SAASC,QAASH,GAA1C,UCHWI,EANC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,4BAAKD,GACL,6BAAMC,KCmCKC,E,4MAjCbC,MAAQ,CACNd,KAAM,EACNE,IAAK,EACLD,QAAS,G,EAEXc,YAAc,SAACC,GACb,IAAMC,EAAaD,EAAEE,OAAOX,KAC5B,EAAKY,UAAS,SAACC,GAAD,sBACXH,EAAaG,EAAUH,GAAc,O,uDAIhC,IAAD,EACwBI,KAAKP,MAA5Bd,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,ECtBS,SAACH,EAAMC,EAASC,GAAhB,OAAwBF,EAAOC,EAAUC,EDsB1CoB,CAAWtB,EAAMC,EAASC,GAClCE,ECrBsB,SAACJ,EAAMG,GAAP,OAA0B,IAAPH,EAAcG,GAAOoB,QAAQ,GDqBjDC,CAAwBxB,EAAMG,GACzD,OACI,kBAAC,EAAD,CAASQ,MAAO,yBACd,kBAAC,EAAD,CAEEL,gBAAiBe,KAAKN,cAExB,kBAAC,EAAD,CACEf,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,S,GA5BTqB,aEFRC,EADH,kBAAC,EAAD,MCAZC,IAASC,OACPF,EACAG,SAASC,eAAe,U","file":"static/js/main.9161ac67.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => (\n  <p>{message}</p>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Notification from '../Notification';\n\nimport './styles/index.module.css';\n\nconst Statistics = ({\n  good, neutral, bad, total, positivePercentage,\n}) => (\n  <>\n    <h2>Statistics</h2>\n    {!total && <Notification message=\"No feedback given\" />}\n    {!!total && (\n    <>\n      <ul>\n        <li>Good: { good }</li>\n        <li>Neutral: { neutral }</li>\n        <li>Bad: { bad }</li>\n        <li>Total: { total }</li>\n        <li>Positive feedback: { positivePercentage } %</li>\n      </ul>\n    </>\n    )}\n  </>\n);\n\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/index.module.css';\n\nconst FeedbackOptions = ({ onLeaveFeedback }) => (\n  <>\n    <button name=\"good\" type=\"button\" onClick={onLeaveFeedback}>\n      Good\n    </button>\n    <button name=\"neutral\" type=\"button\" onClick={onLeaveFeedback}>\n      Neutral\n    </button>\n    <button name=\"bad\" type=\"button\" onClick={onLeaveFeedback}>\n      Bad\n    </button>\n  </>\n);\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n  <>\n    <h2>{title}</h2>\n    <div>{children}</div>\n  </>\n);\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\n};\n","import React, { Component } from \"react\";\nimport Statistics from \"../Statistics\";\nimport Feedbackoptions from \"../FeedbackOptions\";\nimport Section from \"../Section\";\nimport { countTotal, countPositivePercentage } from '../../helpers/index';\n\n\nclass Feedback extends Component {\n  state = {\n    good: 0,\n    bad: 0,\n    neutral: 0,\n  };\n  handleClick = (e) => {\n    const targetName = e.target.name;\n    this.setState((prevState) => ({\n      [targetName]: prevState[targetName] + 1,\n    }));\n  };\n  \n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = countTotal(good, neutral, bad);\n    const positivePercentage = countPositivePercentage(good, total);\n    return (\n        <Section title={\"Please leave feedback\"}>\n          <Feedbackoptions\n            // options={}\n            onLeaveFeedback={this.handleClick}\n          />\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        </Section>\n    );\n  }\n}\nexport default Feedback;\n","const countTotal = (good, neutral, bad) => good + neutral + bad;\n\nconst countPositivePercentage = (good, total) => ((good * 100) / total).toFixed(2);\n\nexport { countTotal, countPositivePercentage };\n","import React from 'react';\nimport Feedback from './Feedback';\n\n\nconst App = <Feedback />;\nexport default App;\n","// import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  App,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}